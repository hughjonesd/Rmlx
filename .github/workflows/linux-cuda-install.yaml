# Workflow for testing package installation on Linux with CUDA backend
# This workflow installs CUDA toolkit and attempts to build the package

name: Linux CUDA Install

on:
  push:
    branches: [experiment-vendor-mlx]
  pull_request:
    branches: [experiment-vendor-mlx]
  workflow_dispatch:

jobs:
  linux-cuda:
    runs-on: ubuntu-latest

    name: Linux with CUDA

    steps:
      - uses: actions/checkout@v4

      - name: Install CUDA Toolkit
        uses: Jimver/cuda-toolkit@v0.2.14
        with:
          cuda: '13.0.1'
          method: 'network'
          sub-packages: '["nvcc", "cudart", "cublas"]'

      - name: Verify CUDA Installation
        run: |
          nvcc --version
          echo "CUDA_HOME=$CUDA_HOME"
          ls -la $CUDA_HOME/lib64/ || echo "lib64 not found"
          ls -la /usr/local/cuda/lib64/ || echo "/usr/local/cuda/lib64 not found"

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 'release'
          use-public-rspm: true

      - name: Install CMake
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake
          cmake --version

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - name: Configure package
        run: |
          chmod +x configure
          chmod +x cleanup
          ./configure
        shell: bash

      - name: Build and install package
        run: |
          R CMD build .
          R CMD INSTALL *.tar.gz
        shell: bash

      - name: Verify installation
        run: |
          Rscript -e "library(Rmlx); print('Package loaded successfully')"
