% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shape.R
\name{mlx_moveaxis}
\alias{mlx_moveaxis}
\alias{aperm.mlx}
\title{Reorder MLX tensor axes}
\usage{
mlx_moveaxis(x, source, destination)

\method{aperm}{mlx}(a, perm = NULL, resize = TRUE, ...)
}
\arguments{
\item{x, a}{An object coercible to \code{mlx} via \code{\link[=as_mlx]{as_mlx()}}.}

\item{source}{Integer vector of axis indices to move (1-indexed; negatives
count from the end).}

\item{destination}{Integer vector giving the target positions for \code{source}
axes (1-indexed; negatives count from the end). Must be the same length as
\code{source}.}

\item{perm}{Integer permutation describing the desired axis order, matching
the semantics of \code{\link[base:aperm]{base::aperm()}}.}

\item{resize}{Logical flag from \code{\link[base:aperm]{base::aperm()}}. Only \code{TRUE} is currently
supported for MLX tensors.}

\item{...}{Additional arguments accepted for compatibility; ignored.}
}
\value{
An \code{mlx} tensor with axes permuted.
}
\description{
\itemize{
\item \code{mlx_moveaxis()} mirrors MLX's native \href{https://ml-explore.github.io/mlx/build/html/python/array_api/generated/mlx.core.moveaxis.html}{moveaxis}
primitive, repositioning one or more axes to new locations.
\item \code{aperm.mlx()} provides the familiar R interface, permuting axes according
to \code{perm} via repeated calls to \code{mlx_moveaxis()}.
}
}
\examples{
x <- as_mlx(array(1:8, dim = c(2, 2, 2)))
moved <- mlx_moveaxis(x, source = 1, destination = 3)
permuted <- aperm(x, c(2, 1, 3))
}
