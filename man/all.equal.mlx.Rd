% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/math.R
\name{all.equal.mlx}
\alias{all.equal.mlx}
\title{Test if two MLX arrays are (nearly) equal}
\usage{
\method{all.equal}{mlx}(target, current, tolerance = sqrt(.Machine$double.eps), ...)
}
\arguments{
\item{target, current}{MLX arrays to compare}

\item{tolerance}{Numeric tolerance for comparison (default: sqrt(.Machine$double.eps))}

\item{...}{Additional arguments (currently ignored)}
}
\value{
Either \code{TRUE} or a character vector describing differences
}
\description{
S3 method for \code{all.equal} following R semantics. Returns \code{TRUE} if arrays
are close, or a character vector describing differences if they are not.
}
\details{
This method follows R's \code{all.equal()} semantics:
\itemize{
\item Returns \code{TRUE} if arrays are close within tolerance
\item Returns a character vector describing differences otherwise
\item Checks dimensions/shapes before comparing values
}

The tolerance is converted to MLX's rtol and atol parameters:
\itemize{
\item rtol = tolerance
\item atol = tolerance
}
}
\examples{
a <- as_mlx(c(1.0, 2.0, 3.0))
b <- as_mlx(c(1.0 + 1e-6, 2.0 + 1e-6, 3.0 + 1e-6))
all.equal(a, b)  # TRUE

c <- as_mlx(c(1.0, 2.0, 10.0))
all.equal(a, c)  # Character vector describing difference
}
\seealso{
\code{\link[=mlx_allclose]{mlx_allclose()}}, \code{\link[=mlx_isclose]{mlx_isclose()}}
}
