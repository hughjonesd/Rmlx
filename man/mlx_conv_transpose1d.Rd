% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nn.R
\name{mlx_conv_transpose1d}
\alias{mlx_conv_transpose1d}
\title{1D Transposed Convolution}
\usage{
mlx_conv_transpose1d(
  input,
  weight,
  stride = 1L,
  padding = 0L,
  dilation = 1L,
  output_padding = 0L,
  groups = 1L,
  device = mlx_default_device()
)
}
\arguments{
\item{input}{Input mlx array. Shape depends on dimensionality (see individual functions).}

\item{weight}{Weight array. Shape depends on dimensionality (see individual functions).}

\item{stride}{Stride of the convolution. Can be a scalar or vector (length depends
on dimensionality). Default: 1 for 1D, c(1,1) for 2D, c(1,1,1) for 3D.}

\item{padding}{Amount of zero padding. Can be a scalar or vector (length depends
on dimensionality). Default: 0 for 1D, c(0,0) for 2D, c(0,0,0) for 3D.}

\item{dilation}{Spacing between kernel elements. Can be a scalar or vector (length
depends on dimensionality). Default: 1 for 1D, c(1,1) for 2D, c(1,1,1) for 3D.}

\item{output_padding}{Additional size added to output shape. Default: 0}

\item{groups}{Number of blocked connections from input to output channels. Default: 1.}

\item{device}{Execution target: supply \code{"gpu"}, \code{"cpu"}, or an
\code{mlx_stream} created via \code{\link[=mlx_new_stream]{mlx_new_stream()}}. Default: \code{mlx_default_device()}.}
}
\value{
An mlx array with the transposed convolution result
}
\description{
Applies a 1D transposed convolution (also called deconvolution) over an input signal.
Transposed convolutions are used to upsample the spatial dimensions of the input.
}
\details{
Input has shape \verb{(batch, length, in_channels)} for 'NWC' layout. Weight has shape
\verb{(out_channels, kernel_size, in_channels)}.
}
\seealso{
\code{\link[=mlx_conv1d]{mlx_conv1d()}}, \code{\link[=mlx_conv_transpose2d]{mlx_conv_transpose2d()}}, \code{\link[=mlx_conv_transpose3d]{mlx_conv_transpose3d()}}

\url{https://ml-explore.github.io/mlx/build/html/python/nn.html}
}
