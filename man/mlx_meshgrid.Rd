% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shape.R
\name{mlx_meshgrid}
\alias{mlx_meshgrid}
\title{Construct coordinate arrays from input vectors}
\usage{
mlx_meshgrid(..., sparse = FALSE, indexing = c("xy", "ij"), device = NULL)
}
\arguments{
\item{...}{One or more arrays (or a single list) convertible via \code{\link[=as_mlx]{as_mlx()}} representing coordinate vectors.}

\item{sparse}{Logical flag producing broadcast-friendly outputs when \code{TRUE}.}

\item{indexing}{Either \code{"xy"} (Cartesian) or \code{"ij"} (matrix) indexing.}

\item{device}{Execution target: supply \code{"gpu"}, \code{"cpu"}, or an
\code{mlx_stream} created via \code{\link[=mlx_new_stream]{mlx_new_stream()}}. Default: \code{mlx_default_device()}.}
}
\value{
A list of mlx arrays matching the number of inputs.
}
\description{
\code{mlx_meshgrid()} mirrors \href{https://ml-explore.github.io/mlx/build/html/python/array.html#mlx.core.meshgrid}{\code{mlx.core.meshgrid()}},
returning coordinate arrays suitable for vectorised evaluation on MLX devices.
}
\examples{
xs <- as_mlx(1:3)
ys <- as_mlx(1:2)
grids <- mlx_meshgrid(xs, ys, indexing = "xy")
lapply(grids, as.matrix)
}
\seealso{
\url{https://ml-explore.github.io/mlx/build/html/python/array.html#mlx.core.meshgrid}
}
