% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/math.R
\name{mlx_allclose}
\alias{mlx_allclose}
\title{Test if all elements of two arrays are close}
\usage{
mlx_allclose(
  a,
  b,
  rtol = 1e-05,
  atol = 1e-08,
  equal_nan = FALSE,
  device = mlx_default_device()
)
}
\arguments{
\item{a, b}{MLX arrays or objects coercible to MLX arrays}

\item{rtol}{Relative tolerance (default: 1e-5)}

\item{atol}{Absolute tolerance (default: 1e-8)}

\item{equal_nan}{If \code{TRUE}, NaN values are considered equal (default: \code{FALSE})}

\item{device}{Device to use for computation}
}
\value{
An \code{mlx} array containing a single boolean value
}
\description{
Returns a boolean scalar indicating whether all elements of two arrays
are close within specified tolerances.
}
\details{
Two values are considered close if:
\code{abs(a - b) <= (atol + rtol * abs(b))}

This function returns \code{TRUE} only if all elements are close.
Supports NumPy-style broadcasting.
}
\examples{
a <- as_mlx(c(1.0, 2.0, 3.0))
b <- as_mlx(c(1.0 + 1e-6, 2.0 + 1e-6, 3.0 + 1e-6))
as.logical(as.matrix(mlx_allclose(a, b)))  # TRUE
}
\seealso{
\code{\link[=mlx_isclose]{mlx_isclose()}}, \code{\link[=all.equal.mlx]{all.equal.mlx()}},
\url{https://ml-explore.github.io/mlx/build/html/python/_autosummary/mlx.core.allclose.html}
}
