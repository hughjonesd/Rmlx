% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/base_generics_doc.R
\name{base-generics}
\alias{base-generics}
\title{Base R generics with mlx methods}
\description{
Rmlx provides S3 methods for a number of base R generics so that common
operations keep working after converting objects with \code{\link[=as_mlx]{as_mlx()}}. The main
entry points are:
}
\details{
\itemize{
\item \verb{\\\%*\\\%} for matrix multiplication (see \verb{?\\\%*\%.mlx})
\item \code{[} and \verb{[<-} for extraction and assignment (see \verb{?[.mlx} and \verb{?[<-.mlx})
\item \code{Ops} and \code{Math} for elementwise arithmetic and math (see \code{?Ops.mlx} and \code{?Math.mlx})
\item \code{Summary} for reductions such as \code{sum()} and \code{max()} (see \code{?Summary.mlx})
\item \code{as.matrix()}, \code{as.array()}, and \code{as.vector()} for conversion back to base R (see \code{?as.matrix.mlx}, \code{?as.array.mlx}, \code{?as.vector.mlx})
\item \code{cbind()} and \code{rbind()} for binding arrays along rows or columns (see \code{?cbind.mlx} and \code{?rbind.mlx})
\item \code{rowMeans()}, \code{colMeans()}, \code{rowSums()}, and \code{colSums()} for axis-wise summaries (see \code{?rowMeans.mlx}, \code{?colMeans.mlx}, \code{?rowSums.mlx}, \code{?colSums.mlx})
\item \code{aperm()}, \code{t()}, and \verb{dim<-} for shape manipulation (see \code{?aperm.mlx}, \code{?t.mlx}, \verb{?\\}dim<-.mlx\``)
\item \code{kronecker()}, \code{outer()}, \code{crossprod()}, and \code{tcrossprod()} for linear algebra helpers (see \code{?kronecker}, \code{?outer.mlx}, \code{?crossprod}, \code{?tcrossprod})
\item \code{fft()}, \code{chol()}, \code{chol2inv()}, and \code{solve()} for numerical routines (see \code{?fft}, \code{?chol.mlx}, \code{?chol2inv}, \code{?solve.mlx})
}
}
\seealso{
\code{\link[=as_mlx]{as_mlx()}}
}
\keyword{documentation}
