% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stats.R
\name{mlx_sum}
\alias{mlx_sum}
\alias{mlx_prod}
\alias{mlx_all}
\alias{mlx_any}
\title{Reduce MLX tensors}
\usage{
mlx_sum(x, axis = NULL, drop = TRUE)

mlx_prod(x, axis = NULL, drop = TRUE)

mlx_all(x, axis = NULL, drop = TRUE)

mlx_any(x, axis = NULL, drop = TRUE)
}
\arguments{
\item{x}{An object coercible to \code{mlx} via \code{\link[=as_mlx]{as_mlx()}}.}

\item{axis}{Optional integer vector of axes (1-indexed) to reduce.
When \code{NULL}, the reduction is performed over all elements.}

\item{drop}{Logical flag controlling dimension dropping: \code{TRUE} (default)
removes reduced axes, while \code{FALSE} retains them with length one.}
}
\value{
An \code{mlx} tensor containing the reduction result.
}
\description{
These helpers mirror NumPy-style reductions, optionally collapsing one or
more axes. Use \code{drop = FALSE} to retain reduced axes with length one
(akin to \code{keepdims = TRUE} in NumPy).
}
\examples{
x <- as_mlx(matrix(1:4, 2, 2))
mlx_sum(x)
mlx_sum(x, axis = 1)
mlx_prod(x, axis = 2, drop = FALSE)
mlx_all(x > 0)
mlx_any(x > 3)
}
