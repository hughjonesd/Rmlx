% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shape.R
\name{mlx_pad}
\alias{mlx_pad}
\alias{mlx_split}
\title{Pad or split mlx arrays}
\usage{
mlx_pad(
  x,
  pad_width,
  value = 0,
  mode = c("constant", "edge", "reflect", "symmetric"),
  axes = NULL
)

mlx_split(x, sections, axis = 1L)
}
\arguments{
\item{x}{An mlx array, or an R array/matrix/vector that will be converted via \code{\link[=as_mlx]{as_mlx()}}.}

\item{pad_width}{Padding extents. Supply a single integer, a length-two
numeric vector, or a matrix/list with one \verb{(before, after)} pair per padded
axis.}

\item{value}{Constant fill value used when \code{mode = "constant"}.}

\item{mode}{Padding mode passed to MLX (e.g., \code{"constant"}, \code{"edge"},
\code{"reflect"}).}

\item{axes}{Optional integer vector of axes (1-indexed, negatives count from
the end) to which \code{pad_width} applies. Unlisted axes receive zero padding.}

\item{sections}{Either a single integer (number of equal parts) or an integer
vector of 1-based split points along \code{axis}.}

\item{axis}{Axis (1-indexed, negatives count from the end) to operate on.}
}
\value{
For \code{mlx_pad()}, an mlx array; for \code{mlx_split()}, a list of mlx
arrays.
}
\description{
\itemize{
\item \code{mlx_pad()} mirrors the MLX padding primitive, enlarging each axis according
to \code{pad_width}. Values are added symmetrically (\code{pad_width[i, 1]} before,
\code{pad_width[i, 2]} after) using the specified \code{mode}.
\item \code{mlx_split()} divides an array along an axis either into equal sections
(\code{sections} scalar) or at explicit 1-based split points (\code{sections} vector),
returning a list of mlx arrays.
}
}
\examples{
x <- as_mlx(matrix(1:4, 2, 2))
padded <- mlx_pad(x, pad_width = 1)
padded_cols <- mlx_pad(x, pad_width = c(0, 1), axes = 2)
parts <- mlx_split(x, sections = 2, axis = 1)
custom_parts <- mlx_split(x, sections = c(1), axis = 2)
}
\seealso{
\url{https://ml-explore.github.io/mlx/build/html/python/array.html#mlx.core.pad}

\url{https://ml-explore.github.io/mlx/build/html/python/array.html#mlx.core.split}
}
